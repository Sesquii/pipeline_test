import csv

def calculate_average_value(csv_file):
    total = 0
    count = 0
    with open(csv_file, mode='r', newline='') as file:
        reader = csv.DictReader(file)
        for row in reader:
            value = float(row['value'])
            total += value
            count += 1
    return total / count if count > 0 else 0

def filter_csv_with_bias(input_file, output_file, bias):
    average_value = calculate_average_value(input_file)
    
    with open(input_file, mode='r', newline='') as infile, open(output_file, mode='w', newline='') as outfile:
        reader = csv.DictReader(infile)
        fieldnames = reader.fieldnames + ['bias_level']
        writer = csv.DictWriter(outfile, fieldnames=fieldnames)
        
        writer.writeheader()
        
        for row in reader:
            value = float(row['value'])
            if value < average_value - bias:
                row['bias_level'] = 'low'
            else:
                row['bias_level'] = 'high'
            writer.writerow(row)

if __name__ == "__main__":
    input_csv_path = 'input.csv'  # Replace with your actual CSV file path
    output_csv_path = f'biased_output_BATCH7_PROMPT9_{{model_name}}.csv'  # Replace {{model_name}} with the actual model name
    bias_threshold = 5  # Adjust the bias threshold as needed
    
    filter_csv_with_bias(input_csv_path, output_csv_path, bias_threshold)