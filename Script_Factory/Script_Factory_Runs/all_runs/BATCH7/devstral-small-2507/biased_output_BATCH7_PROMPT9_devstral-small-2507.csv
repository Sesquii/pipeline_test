import csv
import sys

def biased_csv_filter(input_filename, model_name):
    """
    Filters a CSV file based on numerical bias and adds a 'bias_level' column.

    Args:
        input_filename (str): Path to the input CSV file.
        model_name (str): Name of the model for output filename.
    """
    # Read all rows from the input CSV
    with open(input_filename, mode='r', newline='') as infile:
        reader = csv.DictReader(infile)
        rows = list(reader)

    if not rows:
        print("No data found in the input file.")
        return

    # Calculate the average of 'value' column
    total_value = sum(float(row['value']) for row in rows)
    average_value = total_value / len(rows)

    # Process rows and determine bias level
    output_rows = []
    for row in rows:
        value = float(row['value'])
        if value < average_value:
            row['bias_level'] = 'low'
        else:
            row['bias_level'] = 'high'
        output_rows.append(row)

    # Write the filtered data to a new CSV file
    output_filename = f'biased_output_BATCH7_PROMPT9_{model_name}.csv'
    fieldnames = reader.fieldnames + ['bias_level']

    with open(output_filename, mode='w', newline='') as outfile:
        writer = csv.DictWriter(outfile, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(output_rows)

    print(f"Filtered data saved to {output_filename}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python biased_csv_filter.py <input_file> <model_name>")
    else:
        input_file = sys.argv[1]
        model_name = sys.argv[2]
        biased_csv_filter(input_file, model_name)